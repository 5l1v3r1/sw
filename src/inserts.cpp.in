/*
 * Copyright (c) 2016, Egor Pugin
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     1. Redistributions of source code must retain the above copyright
 *        notice, this list of conditions and the following disclaimer.
 *     2. Redistributions in binary form must reproduce the above copyright
 *        notice, this list of conditions and the following disclaimer in the
 *        documentation and/or other materials provided with the distribution.
 *     3. Neither the name of the copyright holder nor the names of
 *        its contributors may be used to endorse or promote products
 *        derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include "inserts.h"

const String cppan_h =                  R"my_cppan_str(CPPAN_INCLUDE<inserts/cppan.h>)my_cppan_str";
const String version_rc_in =            R"my_cppan_str(CPPAN_INCLUDE<inserts/version.rc.in>)my_cppan_str";
const String branch_rc_in =             R"my_cppan_str(CPPAN_INCLUDE<inserts/branch.rc.in>)my_cppan_str";
const String cmake_functions =          R"my_cppan_str(CPPAN_INCLUDE<inserts/functions.cmake>)my_cppan_str";
const String cmake_build_file =         R"my_cppan_str(CPPAN_INCLUDE<inserts/build.cmake>)my_cppan_str";
const String cmake_generate_file =      R"my_cppan_str(CPPAN_INCLUDE<inserts/generate.cmake>)my_cppan_str";
const String cmake_export_import_file = R"my_cppan_str(CPPAN_INCLUDE<inserts/exports.cmake>)my_cppan_str";
const String cmake_header =             R"my_cppan_str(CPPAN_INCLUDE<inserts/header.cmake>)my_cppan_str";
